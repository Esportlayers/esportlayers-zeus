variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  GIT_DEPTH: "0"

stages:
  - test
  - build
  - deploy

include:
  stage: test
  template: Dependency-Scanning.gitlab-ci.yml

build:
  stage: build
  image: node:latest
  before_script:
    - yarn config set cache-folder .yarn
    - yarn install
  cache:
    paths:
      - node_modules/
      - .yarn
  artifacts:
    paths:
      - lib/
  script:
    - echo "Building"
    - yarn run build

staging:
  stage: deploy
  needs:
    - job: build
      artifacts: true
  image: node:latest
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$STAGING_SSH_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $STAGING_HOST >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  only:
    - master
  script:
    - echo "Uploading build artifacts"
    - scp -P22 -r package.json $STAGING_USER@$STAGING_HOST:$CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE
    - scp -P22 -r yarn.lock $STAGING_USER@$STAGING_HOST:$CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE
    - scp -P22 -r lib/* $STAGING_USER@$STAGING_HOST:$CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE/lib
    - scp -P22 -r scripts/* $STAGING_USER@$STAGING_HOST:$CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE/scripts
    - scp -P22 -r migrations/* $STAGING_USER@$STAGING_HOST:$CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE/migrations
    - ssh -p22 $STAGING_USER@$STAGING_HOST "cd $CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE && yarn install"
    - ssh -p22 $STAGING_USER@$STAGING_HOST "sudo pm2 restart $CI_PROJECT_NAMESPACE/$CI_PROJECT_TITLE"
